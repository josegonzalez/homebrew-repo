#!/usr/bin/env bash
set -eo pipefail

fn-desc() {
  declare desc="Inspect a function's description"
  local desc=""
  eval "$(type "$1" | grep "declare desc=" | head -1)"
  echo $desc
}

fn-validate-command-file() {
  declare COMMAND_FILE="$1"

  if [[ ! -f "${COMMAND_FILE}" ]]; then
    fn-log-error "Invalid command '${COMMAND_FILE}'"
    return 1
  fi

  local shebang="$(sed -n '1s/^#!//p' "${COMMAND_FILE}")"
  if [[ "$shebang" != "/usr/bin/env bash" ]] && [[ "$shebang" != "/bin/bash" ]]; then
    fn-log-error "Unable to detect bash shell script from file shebang"
    return 1
  fi

  help_check="$(grep -Fx '[[ ${BASH_SOURCE[0]} == "$0" ]] && main "$@"' "$COMMAND_FILE" || true)"
  self_help_check="$(grep -Fx '[[ ${BASH_SOURCE[0]} == "$0" ]] && [[ "$COMMAND_SOURCE" != "true" ]] && main "$@"' "$COMMAND_FILE" || true)"

  if [[ "$help_check" == "" ]] && [[ "$self_help_check" == "" ]]; then
    fn-log-error "Script is not sourceable"
    fn-log-error "Ensure 'main' is called as follows: [[ \"\$0\" == \"\$BASH_SOURCE\" ]] && main \"\$@\""
    return 1
  fi
}

fn-version() {
  declare desc="Inspect a function's version"
  local version=""
  eval "$(type "$1" | grep "declare version=" | head -1)"
  echo $version
}

main() {
  declare desc="Generates a formula file for the given command"
  declare version="0.0.1"
  declare license="MIT License"
  declare COMMAND="${1?Missing command to generate help output for}" SHOW_SOURCE="${2:-false}"
  local COMMAND_FILE="/usr/local/bin/${COMMAND}"

  if [[ -f "$COMMAND" ]]; then
    COMMAND_FILE="$COMMAND"
  fi

  if [[ ! -f "${COMMAND_FILE}" ]]; then
    fn-log-error "Invalid command '${COMMAND_FILE}'"
    return 1
  fi

  if ! fn-validate-command-file "$COMMAND_FILE"; then
    return 1
  fi

  export COMMAND_SOURCE=true
  source "$COMMAND_FILE" || true

  local SHA256="$(sha256sum $COMMAND_FILE | awk '{ print $1 }')"
  local BIN_NAME="$(basename $COMMAND_FILE)"
  local DESCRIPTION="$(fn-desc "main")"
  local VERSION="$(fn-version "main")"
  local COMMIT="$(git rev-parse HEAD)"
  local arr=(${BIN_NAME//-/ })
  local FORMULA="$(printf %s "${arr[@]^}")"

  cat <<EOF
class $FORMULA < Formula
  desc "$DESCRIPTION"
  homepage "http://josediazgonzalez.com"
  url "https://raw.githubusercontent.com/josegonzalez/homebrew-repo/$COMMIT/bin/$BIN_NAME"
  sha256 "$SHA256"
  version "$VERSION"

  def install
    bin.install "$BIN_NAME"
  end

  test do
    system bin/"$BIN_NAME"
  end
end
EOF
}

[[ ${BASH_SOURCE[0]} == "$0" ]] && [[ "$COMMAND_SOURCE" != "true" ]] && main "$@"
